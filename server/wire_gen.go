// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/google/wire"
	"github.com/hackathon-21winter-05/HiQidas/config"
	"github.com/hackathon-21winter-05/HiQidas/repository"
	"github.com/hackathon-21winter-05/HiQidas/server/router"
	heya2 "github.com/hackathon-21winter-05/HiQidas/server/router/heya"
	"github.com/hackathon-21winter-05/HiQidas/server/router/middleware"
	"github.com/hackathon-21winter-05/HiQidas/server/router/oauth"
	"github.com/hackathon-21winter-05/HiQidas/server/router/user"
	"github.com/hackathon-21winter-05/HiQidas/server/router/ws"
	"github.com/hackathon-21winter-05/HiQidas/server/streamer"
	"github.com/hackathon-21winter-05/HiQidas/service"
	"github.com/hackathon-21winter-05/HiQidas/service/heya"
	"github.com/sapphi-red/go-traq"
)

// Injectors from wire.go:

func injectServer(c *config.Config) (*Server, error) {
	server := NewServer(c)
	return server, nil
}

// wire.go:

var SuperSet = wire.NewSet(repository.NewGormRepository, wire.Struct(new(repository.GormRepository), "*"), heya.NewHeyaServiceImpl, wire.Bind(new(heya.HeyaService), new(*heya.HeyaServiceImpl)), service.NewUserServiceImpl, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)), NewServer, router.NewAPIHandler, heya2.NewHeyaHandleGroup, user.NewUserHandlerGroup, ws.NewWSHandlerGroup, oauth.NewOauthHandlerGroup, wire.NewSet(traq.NewAPIClient, traq.NewConfiguration), streamer.NewStreamer, middleware.NewMiddleware)
