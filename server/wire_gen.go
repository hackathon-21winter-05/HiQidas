// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/google/wire"
	"github.com/hackathon-21winter-05/HiQidas/config"
	"github.com/hackathon-21winter-05/HiQidas/repository"
	"github.com/hackathon-21winter-05/HiQidas/server/router"
	"github.com/hackathon-21winter-05/HiQidas/server/router/heya"
	"github.com/hackathon-21winter-05/HiQidas/server/router/middleware"
	"github.com/hackathon-21winter-05/HiQidas/server/router/oauth"
	"github.com/hackathon-21winter-05/HiQidas/server/router/user"
	"github.com/hackathon-21winter-05/HiQidas/server/router/ws"
	"github.com/hackathon-21winter-05/HiQidas/server/streamer"
	"github.com/hackathon-21winter-05/HiQidas/service"
	"github.com/sapphi-red/go-traq"
)

// Injectors from wire.go:

func InjectServer(c *config.Config) (*Server, error) {
	middlewareMiddleware := middleware.NewMiddleware()
	repositoryRepository, err := repository.NewGormRepository(c)
	if err != nil {
		return nil, err
	}
	serviceService := service.NewService(repositoryRepository)
	heyaHandleGroup := heya.NewHeyaHandleGroup(serviceService)
	userHandlerGroup := user.NewUserHandlerGroup(serviceService)
	configuration := traq.NewConfiguration()
	apiClient := traq.NewAPIClient(configuration)
	oauthHandlerGroup := oauth.NewOauthHandlerGroup(c, apiClient)
	streamerStreamer := streamer.NewStreamer()
	wsHandlerGroup := ws.NewWSHandlerGroup(streamerStreamer)
	apiHandler := router.NewAPIHandler(middlewareMiddleware, heyaHandleGroup, userHandlerGroup, oauthHandlerGroup, wsHandlerGroup)
	routerRouter := router.NewRouter(apiHandler)
	server := NewServer(routerRouter, streamerStreamer)
	return server, nil
}

// wire.go:

var SuperSet = wire.NewSet(repository.NewGormRepository, wire.Struct(new(repository.GormRepository), "*"), service.NewService, user.NewUserHandlerGroup, wire.Bind(new(user.UserHandler), new(*user.UserHandlerGroup)), heya.NewHeyaHandleGroup, wire.Bind(new(heya.HeyaHandler), new(*heya.HeyaHandleGroup)), oauth.NewOauthHandlerGroup, wire.Bind(new(oauth.OauthHandler), new(*oauth.OauthHandlerGroup)), wire.NewSet(traq.NewAPIClient, traq.NewConfiguration), middleware.NewMiddleware, wire.Bind(new(middleware.IMiddleware), new(*middleware.Middleware)), ws.NewWSHandlerGroup, wire.Bind(new(ws.WSHandler), new(*ws.WSHandlerGroup)), streamer.NewStreamer, router.NewAPIHandler, router.NewRouter, NewServer)
