name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GO_VERSION: 1.17.3

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          reporter: github-pr-check
          github_token: ${{ secrets.GITHUB_TOKEN }}
  mod:
    name: Module Download
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Mod Cache
        id: mod-cache
        uses: actions/cache@v2.1.7
        with:
          path: ~/go/pkg/mod
          key: mod-${{ hashFiles('**/go.sum') }}
      - name: Setup Go
        if: steps.mod-cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Module Download
        if: steps.mod-cache.outputs.cache-hit != 'true'
        run: go mod download
  protobuf:
    name: Protobuf Generation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Protobuf Cache
        id: protobuf-cache
        uses: actions/cache@v2.1.6
        with:
          path: ./server/protobuf
          key: protobuf-${{ hashFiles('**/*.proto') }}
      - name: Set Go Tools Cache
        id: tools-cache
        if: steps.protobuf-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ~/go/bin
          key: tools-${{ env.GO_VERSION }}
      - name: Install Protoc
        if: steps.protobuf-cache.outputs.cache-hit != 'true'
        uses: arduino/setup-protoc@v1
      - name: Setup Go
        if: steps.protobuf-cache.outputs.cache-hit != 'true' && steps.tools-cache.outputs.cache-hit != 'true'
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install Tools
        if: steps.protobuf-cache.outputs.cache-hit != 'true' && steps.tools-cache.outputs.cache-hit != 'true'
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - name: Generate code
        if: steps.protobuf-cache.outputs.cache-hit != 'true'
        run: make protobuf-go
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [mod, protobuf]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set Mod Cache
        uses: actions/cache@v2.1.7
        with:
          path: ~/go/pkg/mod
          key: mod-${{ hashFiles('**/go.sum') }}
      - name: Set Protobuf Cache
        uses: actions/cache@v2.1.6
        with:
          path: ./server/protobuf
          key: protobuf-${{ hashFiles('**/*.proto') }}
      - name: Build
        run: go build -o ./HiQidas
      - uses: actions/upload-artifact@v2.3.0
        with:
          name: HiQidas
          path: ./HiQidas
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [mod, protobuf]
    # services:
    #   mariadb:
    #     image: mariadb:latest
    #     options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    #     env:
    #       MYSQL_ROOT_PASSWORD: password
    #       MYSQL_DATABASE: HiQidas
    #     ports:
    #       - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Set Mod Cache
        uses: actions/cache@v2.1.7
        with:
          path: ~/go/pkg/mod
          key: mod-${{ hashFiles('**/go.sum') }}
      - name: Set Protobuf Cache
        uses: actions/cache@v2.1.6
        with:
          path: ./server/protobuf
          key: protobuf-${{ hashFiles('**/*.proto') }}
      - name: Run Test
        run: go test ./... -v
        # env:
        #   MARIADB_HOSTNAME: 127.0.0.1
        #   MARIADB_DATABASE: HiQidas
        #   MARIADB_USERNAME: root
        #   MARIADB_PASSWORD: password
